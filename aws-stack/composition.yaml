---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: deploy.aws-stack.templates.krateo.io
  labels:
    platform: aws
spec:
  compositeTypeRef:
    apiVersion: templates.krateo.io/v1alpha1
    kind: aws-stack
  resources:
    - base:
        apiVersion: eks.aws.crossplane.io/v1beta1
        kind: Cluster
        spec:
          forProvider:
            region: eu-central-1
            resourcesVpcConfig:
              endpointPrivateAccess: true
              endpointPublicAccess: true
          writeConnectionSecretToRef:
              namespace: crossplane-system
          providerConfigRef:
              name: aws-stack-template-provider
      patches:
        - fromFieldPath: "spec.eks.clusterName"
          toFieldPath: "metadata.name"
        - fromFieldPath: "spec.network.networkName"
          toFieldPath: "spec.forProvider.resourcesVpcConfig.subnetIdRefs[0].name"
          transforms:
            - type: string
              string:
                fmt: "%s-sn0"
        - fromFieldPath: "spec.network.networkName"
          toFieldPath: "spec.forProvider.resourcesVpcConfig.subnetIdRefs[1].name"
          transforms:
            - type: string
              string:
                fmt: "%s-sn1"
        - fromFieldPath: "spec.eks.clusterName"
          toFieldPath: "spec.forProvider.roleArnRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-controlplane"
        - fromFieldPath: "spec.eks.clusterName"
          toFieldPath: "spec.writeConnectionSecretToRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-eks-kubeconfig"
    - base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: VPC
        spec:
          forProvider:
            region: eu-central-1
            cidrBlock: 10.1.0.0/16
            enableDnsSupport: true
            enableDnsHostNames: true
          providerConfigRef:
            name: aws-stack-template-provider
      patches:
        - fromFieldPath: "spec.network.networkName"
          toFieldPath: "metadata.name"
    - base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: InternetGateway
        spec:
          forProvider:
            region: eu-central-1
          providerConfigRef:
            name: aws-stack-template-provider
      patches:
        - fromFieldPath: "spec.network.networkName"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-ig"
        - fromFieldPath: "spec.network.networkName"
          toFieldPath: "spec.forProvider.vpcIdRef.name"
    - base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            zone: eu-central-1a
            access: private
        spec:
          forProvider:
            region: eu-central-1
            mapPublicIPOnLaunch: true
            cidrBlock: 10.1.1.0/24
            availabilityZone: eu-central-1a
          providerConfigRef:
            name: aws-stack-template-provider
      patches:
        - fromFieldPath: "spec.network.networkName"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-sn0"
        - fromFieldPath: "spec.network.networkName"
          toFieldPath: "spec.forProvider.vpcIdRef.name"
    - base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            zone: eu-central-1b
            access: private
        spec:
          forProvider:
            region: eu-central-1
            mapPublicIPOnLaunch: true
            cidrBlock: 10.1.2.0/24
            availabilityZone: eu-central-1b
          providerConfigRef:
            name: aws-stack-template-provider
      patches:
        - fromFieldPath: "spec.network.networkName"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-sn1"
        - fromFieldPath: "spec.network.networkName"
          toFieldPath: "spec.forProvider.vpcIdRef.name"
    - base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: RouteTable
        spec:
          forProvider:
            region: eu-central-1
            routes:
              - destinationCidrBlock: 0.0.0.0/0
          providerConfigRef:
            name: aws-stack-template-provider
      patches:
        - fromFieldPath: "spec.network.networkName"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-rt"
        - fromFieldPath: "spec.network.networkName"
          toFieldPath: "spec.forProvider.vpcIdRef.name"
        - fromFieldPath: "spec.network.networkName"
          toFieldPath: "spec.forProvider.routes[0].gatewayIdRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-ig"
        - fromFieldPath: "spec.network.networkName"
          toFieldPath: "spec.forProvider.associations[0].subnetIdRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-sn0"
        - fromFieldPath: "spec.network.networkName"
          toFieldPath: "spec.forProvider.associations[1].subnetIdRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-sn1"
    - base:
        apiVersion: eks.aws.crossplane.io/v1alpha1
        kind: NodeGroup
        spec:
          forProvider:
            region: eu-central-1
            instanceTypes:
              - t3.medium
          providerConfigRef:
            name: aws-stack-template-provider
      patches:
        - fromFieldPath: "spec.eks.clusterName"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-ng"
        - fromFieldPath: "spec.eks.clusterName"
          toFieldPath: "spec.forProvider.clusterName"
        - fromFieldPath: "spec.nodeGroup.scalingConfig.minSize"
          toFieldPath: "spec.forProvider.scalingConfig.minSize"
        - fromFieldPath: "spec.nodeGroup.scalingConfig.maxSize"
          toFieldPath: "spec.forProvider.scalingConfig.maxSize"
        - fromFieldPath: "spec.nodeGroup.scalingConfig.desiredSize"
          toFieldPath: "spec.forProvider.scalingConfig.desiredSize"
        - fromFieldPath: "spec.network.networkName"
          toFieldPath: "spec.forProvider.subnetRefs[0].name"
          transforms:
            - type: string
              string:
                fmt: "%s-sn0"
        - fromFieldPath: "spec.network.networkName"
          toFieldPath: "spec.forProvider.subnetRefs[1].name"
          transforms:
            - type: string
              string:
                fmt: "%s-sn1"
        - fromFieldPath: "spec.eks.clusterName"
          toFieldPath: "spec.forProvider.nodeRoleRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-ng-noderole"
    - base:
        apiVersion: aws.crossplane.io/v1beta1
        kind: ProviderConfig
        metadata:
          name: aws-stack-template-provider
        spec:
          credentials:
            source: Secret
            secretRef:
              namespace: crossplane-system
              name: aws-creds
              key: credentials
    - base:
        apiVersion: database.aws.crossplane.io/v1beta1
        kind: RDSInstance
        spec:
          forProvider:
            autoMinorVersionUpgrade: true
            backupRetentionPeriod: 0
            caCertificateIdentifier: rds-ca-2019
            copyTagsToSnapshot: false
            deletionProtection: false
            enableIAMDatabaseAuthentication: false
            enablePerformanceInsights: false
            engine: postgres
            licenseModel: postgresql-license
            masterUsername: amministratore
            multiAZ: false
            skipFinalSnapshotBeforeDeletion: true
            port: 5432
            publiclyAccessible: true
            storageEncrypted: false
          writeConnectionSecretToRef:
            namespace: crossplane-system
          providerConfigRef:
            name: aws-stack-template-provider
      patches:
        - fromFieldPath: "spec.rds.name"
          toFieldPath: "metadata.name"
        - fromFieldPath: "spec.rds.region"
          toFieldPath: "spec.forProvider.region"
        - fromFieldPath: "spec.rds.allocatedStorage"
          toFieldPath: "spec.forProvider.allocatedStorage"
        - fromFieldPath: "spec.rds.dbInstanceClass"
          toFieldPath: "spec.forProvider.dbInstanceClass"
        - fromFieldPath: "spec.rds.engineVersion"
          toFieldPath: "spec.forProvider.engineVersion"
        - fromFieldPath: "spec.rds.storageType"
          toFieldPath: "spec.forProvider.storageType"
        - fromFieldPath: "spec.eks.clusterName" # ex component id
          toFieldPath: "spec.writeConnectionSecretToRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-rdspostgresql-conn"
    - base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: Role
        spec:
          forProvider:
            assumeRolePolicyDocument: |
              {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "eks.amazonaws.com"
                            ]
                        },
                        "Action": [
                            "sts:AssumeRole"
                        ]
                    }
                ]
              }
          providerConfigRef:
            name: aws-stack-template-provider
      patches:
        - fromFieldPath: "spec.eks.clusterName"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-controlplane"        
    - base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
          providerConfigRef:
            name: aws-stack-template-provider
      patches:
        - fromFieldPath: "spec.roles.policyAttachment.name"
          toFieldPath: "meatdata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-controlplane"
        - fromFieldPath: "spec.eks.clusterName" #ex component id
          toFieldPath: "spec.forProvider.roleNameRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-controlplane"
    - base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: Role
        spec:
          forProvider:
            assumeRolePolicyDocument: |
              {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "ec2.amazonaws.com"
                            ]
                        },
                        "Action": [
                            "sts:AssumeRole"
                        ]
                    }
                ]
              }
          providerConfigRef:
            name: aws-stack-template-provider
      patches:
        - fromFieldPath: "spec.eks.clusterName"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-ng-noderole"
        - fromFieldPath: "spec.eks.clusterName"
          toFieldPath: "metadata.labels.name"
          transforms:
            - type: string
              string:
                fmt: "%s-ng-noderole"
    - base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
          providerConfigRef:
            name: aws-stack-template-provider
      patches:
        - fromFieldPath: "spec.eks.clusterName"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-ng-noderole-policy0"
        - fromFieldPath: "spec.eks.clusterName"
          toFieldPath: "spec.forProvider.roleNameSelector.matchLabels.name"
          transforms:
            - type: string
              string:
                fmt: "%s-ng-noderole"
    - base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
          providerConfigRef:
            name: aws-stack-template-provider
      patches:
        - fromFieldPath: "spec.eks.clusterName"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-ng-noderole-policy1"
        - fromFieldPath: "spec.eks.clusterName"
          toFieldPath: "spec.forProvider.roleNameSelector.matchLabels.name"
          transforms:
            - type: string
              string:
                fmt: "%s-ng-noderole"
    - base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
          providerConfigRef:
            name: aws-stack-template-provider
      patches:
        - fromFieldPath: "spec.eks.clusterName"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-ng-noderole-policy2"
        - fromFieldPath: "spec.eks.clusterName"
          toFieldPath: "spec.forProvider.roleNameSelector.matchLabels.name"
          transforms:
            - type: string
              string:
                fmt: "%s-ng-noderole"
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: ProviderConfig
        spec:
          credentials:
            source: Secret
            secretRef:
              namespace: crossplane-system
              key: kubeconfig
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-providerconfig"
        - fromFieldPath: "spec.eks.clusterName"
          toFieldPath: "spec.credentials.secretRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-eks-kubeconfig"
      readinessChecks:
        - type: None
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        spec:
          forProvider:
            chart:
              name: sysdig
              repository: https://charts.sysdig.com
              #version: 3.26.5
            namespace: krateo-system
            values:
              image:
                overrideValue:
                registry: quay.io
                repository: sysdig/agent
                tag: 12.4.0
                pullPolicy: IfNotPresent
                resourceProfile: small
              gke:
                autopilot: false
              rbac:
                create: true
              scc:
                create: true
              psp:
                create: true
              serviceAccount:
                create: true
                name: test-sysdig
              daemonset:
                deploy: true
                updateStrategy:
                  type: RollingUpdate
                  rollingUpdate: {}
                env: {}
                nodeSelector: {}
                arch:
                  - amd64
                  - arm64
                  - s390x
                os:
                  - linux
                affinity: {}
                annotations: {}
                labels: {}
                probes:
                  initialDelay: 90
                kmodule:
                  env: {}
              ebpf:
                enabled: false
                settings:
                  mountEtcVolume: true
              slim:
                enabled: false
                image:
                  repository: sysdig/agent-slim
                kmoduleImage:
                  repository: sysdig/agent-kmodule
                  digest:
                resources:
                  requests:
                    cpu: 1000m
                    memory: 348Mi
                  limits:
                    memory: 512Mi
              sysdig:
                disableCaptures: false
                settings: {collector: ingest-eu1.app.sysdig.com, collector_port: 6443}
              secure:
                enabled: true
                vulnerabilityManagement:
                  newEngineOnly: true
              auditLog:
                enabled: false
                auditServerUrl: 0.0.0.0
                auditServerPort: 7765
                dynamicBackend:
                  enabled: false
              nodeImageAnalyzer:
                deploy: false
                image:
                  repository: sysdig/node-image-analyzer
                  tag: 0.1.16
                  digest:
                  pullPolicy: IfNotPresent
                settings:
                  debug: false
                tolerations:
                  - effect: NoSchedule
                    key: node-role.kubernetes.io/master
                extraVolumes:
                  volumes: []
                  mounts: []
                resources:
                  requests:
                    cpu: 250m
                    memory: 512Mi
                  limits:
                    cpu: 500m
                    memory: 1024Mi
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                        - matchExpressions:
                            - key: kubernetes.io/arch
                              operator: In
                              values:
                                - amd64
                            - key: kubernetes.io/os
                              operator: In
                              values:
                                - linux
                        - matchExpressions:
                            - key: beta.kubernetes.io/arch
                              operator: In
                              values:
                                - amd64
                            - key: beta.kubernetes.io/os
                              operator: In
                              values:
                                - linux
              nodeAnalyzer:
                serviceAccount:
                  create: true
                  name: "node-analyzer"
                deploy: true
                apiEndpoint: "eu1.app.sysdig.com"
                debug: false
                tolerations:
                  - effect: NoSchedule
                    key: node-role.kubernetes.io/master
                labels: {}
                nodeSelector: {}
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                        - matchExpressions:
                            - key: kubernetes.io/arch
                              operator: In
                              values:
                                - amd64
                            - key: kubernetes.io/os
                              operator: In
                              values:
                                - linux
                        - matchExpressions:
                            - key: beta.kubernetes.io/arch
                              operator: In
                              values:
                                - amd64
                            - key: beta.kubernetes.io/os
                              operator: In
                              values:
                                - linux
                imageAnalyzer:
                  image:
                    repository: sysdig/node-image-analyzer
                    tag: 0.1.16
                    digest:
                    pullPolicy: IfNotPresent
                  extraVolumes:
                    volumes: []
                    mounts: []
                  resources:
                    requests:
                      cpu: 150m
                      memory: 512Mi
                    limits:
                      cpu: 500m
                      memory: 1536Mi
                hostAnalyzer:
                  image:
                    repository: sysdig/host-analyzer
                    tag: 0.1.6
                    digest:
                    pullPolicy: IfNotPresent
                  schedule: "@dailydefault"
                  resources:
                    requests:
                      cpu: 150m
                      memory: 512Mi
                    limits:
                      cpu: 500m
                      memory: 1536Mi
                benchmarkRunner:
                  includeSensitivePermissions: false
                  image:
                    repository: sysdig/compliance-benchmark-runner
                    tag: 1.0.17.1
                    digest:
                    pullPolicy: IfNotPresent
                  resources:
                    requests:
                      cpu: 150m
                      memory: 128Mi
                    limits:
                      cpu: 500m
                      memory: 256Mi
                runtimeScanner:
                  deploy: false
                  image:
                    repository: sysdig/vuln-runtime-scanner
                    tag: 0.2.5
                    digest:
                    pullPolicy: IfNotPresent
                  resources:
                    requests:
                      cpu: 150m
                      memory: 512Mi
                      ephemeral-storage: "2Gi"
                    limits:
                      cpu: 1000m
                      memory: 2Gi
                      ephemeral-storage: "4Gi"
                  settings:
                    eveEnabled: false
                  eveConnector:
                    deploy: false
                    image:
                      repository: sysdig/eveclient-api
                      tag: 1.0.0
                      digest:
                      pullPolicy: IfNotPresent
                    resources:
                      requests:
                        cpu: 100m
                        memory: 128Mi
                      limits:
                        cpu: 1000m
                        memory: 512Mi
                    settings:
                      replicas: 1
              customAppChecks: {}
              prometheus:
                file: false
                yaml: {}
              extraVolumes:
                volumes: []
                mounts: []
              tolerations:
                - effect: NoSchedule
                  key: node-role.kubernetes.io/master
              leaderelection:
                enable: false
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: "spec.providerConfigRef.name"
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-providerconfig"
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-sysdig"
        - fromFieldPath: "spec.eks.clusterName"
          toFieldPath: "spec.forProvider.values.clusterName"
        - fromFieldPath: "spec.sysdig.accessKey"
          toFieldPath: "spec.forProvider.values.sysdig.accessKey"
    - base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          name: demo-pod
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: Pod
              spec:
                containers:
                  - name: demo-container
                    image: docker.io/bobcheat/spring-core:latest
          providerConfigRef:
            name: kubernetes-provider-outside
    - base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: ProviderConfig
        metadata:
          name: kubernetes-provider-outside
        spec:
          credentials:
            source: Secret
            secretRef:
              namespace: crossplane-system
              key: kubeconfig