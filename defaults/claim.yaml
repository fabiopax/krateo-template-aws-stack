---
apiVersion: templates.krateo.io/v1alpha1
kind: krateo-template-aws-stack
metadata:
  name: ${{ deploymentId }}-aws-stack
  deploymentId: ${{ deploymentId }}
spec:
  dashboard:
    description: ${{ description }}
    icon: "fa-brands fa-aws"
    tags:
      - aws
      - stack
      - infrastructure
      - rds
    links:
      - url: https://${{ provider }}/${{ organizationName }}/${{ repositoryName }}
        title: ${{ organizationName }}/${{ repositoryName }}
        icon: "fa-brands fa-git"
      - url: https://kiratech.awsapps.com/start#/
        title: AWS Console
        icon: "fa-brands fa-aws"
    plugins:
      - name: resources
        value: ${{ organizationName }}-${{ repositoryName }}
        type: argocd
        icon: fa-solid fa-cookie
      - name: documentation
        values:
          - README.md
        type: doc
        icon: fa-solid fa-book-skull
      #- name: pipelines
      #  values:
      #    - Build STABLE Docker image for every commit
      #    - "[github.com][krateoplatformops][krateo-module-core] CI"
      #    - "[github.com][krateoplatformops][krateo-template-aws-stack] CI"
      #  type: pipeline
      #  icon: fa-solid fa-person-running
      - name: kubernetes
        value: "app=krateo.io"
        type: kubernetes
        icon: fa-brands fa-docker
    owner: ${{ owner }}
  name: "${{ name }}"
  eks:
    clusterName: "${{ clusterName }}"
  network:
    networkName: "${{ networkName }}"
  rds:
    name: "${{ rdsName }}"
    region: "${{ rdsRegion }}"
    allocatedStorage: ${{ rdsDataDiskSizeGb }}
    dbInstanceClass: "${{ rdsInstanceClass }}"
    engineVersion: "${{ rdsEngineVersion }}"
    storageType: "${{ rdsStorageType }}"
  fromRepo:
    domain: github.com
    provider: github
    apiUrl: https://api.github.com/
    repositoryName: krateo-template-aws-stack
    organizationName: krateoplatformops
    schema: https
  toRepo:
    domain: "${{ domain }}"
    provider: "${{ provider }}"
    apiUrl: "${{ apiUrl }}"
    repositoryName: "${{ repositoryName }}"
    organizationName: "${{ organizationName }}"
    schema: ${{ schema }} #it's the protocol for the url
